# -*- coding: utf-8 -*-
"""TITANIC SURVIVAL PREDICTION.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1boSILTcFOXFi67dtggXDDboE13gXQ2o6

## **Task 1 :TITANIC SURVIVAL PREDICTION**

Importing the Dependencies
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

"""Data Collection & Processing"""

# load the data from csv file to Pandas DataFrame
titanic_data = pd.read_csv('/content/tested.csv')

# printing the first 5 rows of the dataframe
titanic_data.head()

# number of rows and Columns
titanic_data.shape

# getting some informations about the data
titanic_data.info()

# check the number of missing values in each column
titanic_data.isnull().sum()

"""Handling the Missing values"""

# drop the "Cabin" column from the dataframe
titanic_data = titanic_data.drop(columns='Cabin', axis=1)

titanic_data.describe

# replacing the missing values in "Age" column with mean value
titanic_data['Age'].fillna(titanic_data['Age'].mean(), inplace=True)

# finding the mode value of "Embarked" column
print(titanic_data['Embarked'].mode())

print(titanic_data['Embarked'].mode()[0])

# replacing the missing values in "Embarked" column with mode value
titanic_data['Embarked'].fillna(titanic_data['Embarked'].mode()[0], inplace=True)

# check the number of missing values in each column
titanic_data.isnull().sum()

"""Data Analysis"""

# getting some statistical measures about the data
titanic_data.describe()

# finding the number of people survived and not survived
#for survived =0 and for unsurvived =1
titanic_data['Survived'].value_counts()

"""Data Visualization"""

sns.set()

# making a count plot for "Survived" column
sns.countplot(x='Survived',data=titanic_data)
plt.show()

titanic_data['Sex'].value_counts()

#making a count plot for "Sex" column
sns.countplot(x='Sex', data=titanic_data)

# number of survivors Gender wise
sns.countplot(x='Sex', hue='Survived', data=titanic_data)

# making a count plot for "Pclass" column
sns.countplot(x='Pclass', data=titanic_data)

sns.countplot(x='Pclass', hue='Survived', data=titanic_data)

"""Encoding the Categorical Columns"""

titanic_data['Sex'].value_counts()

titanic_data['Embarked'].value_counts()

# converting categorical Columns

titanic_data.replace({'Sex':{'male':0,'female':1}, 'Embarked':{'S':0,'C':1,'Q':2}}, inplace=True)

titanic_data.head()

"""Separating features & Target"""

X = titanic_data.drop(columns = ['PassengerId','Name','Ticket','Survived'],axis=1)
Y = titanic_data['Survived']

print(X)

print(Y)

"""Splitting the data into training data & Test data






"""

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size=0.2, random_state=42)

print(X.shape, X_train.shape, X_test.shape)

imputer = SimpleImputer(stratergy='mean')
X_train_imputed = imputer.fit_transform(X_train)
X_test_imputed = imputer.fit_transform(X_test)

